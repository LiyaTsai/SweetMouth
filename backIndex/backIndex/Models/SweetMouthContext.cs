// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace backIndex.Models
{
    public partial class SweetMouthContext : DbContext
    {
        public SweetMouthContext()
        {
        }

        public SweetMouthContext(DbContextOptions<SweetMouthContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Blog> Blog { get; set; }
        public virtual DbSet<HashTag> HashTag { get; set; }
        public virtual DbSet<Member> Member { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Schedule> Schedule { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Blog>(entity =>
            {
                entity.HasKey(e => new { e.ArticleId, e.Floor })
                    .HasName("PK__Blog__F29BE1211585C463");

                entity.Property(e => e.ArticleId).HasColumnName("ArticleID");

                entity.Property(e => e.Article).HasMaxLength(200);

                entity.Property(e => e.Image)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MemberId).HasColumnName("MemberID");

                entity.Property(e => e.SubTitle).HasMaxLength(100);

                entity.Property(e => e.Time).HasColumnType("datetime");

                entity.Property(e => e.Title).HasMaxLength(100);

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.Blog)
                    .HasForeignKey(d => d.MemberId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Blog__MemberID__267ABA7A");
            });

            modelBuilder.Entity<HashTag>(entity =>
            {
                entity.HasKey(e => new { e.ProductName, e.Specifications, e.HashTag1 })
                    .HasName("PK__HashTag__EBB789880F1839A5");

                entity.Property(e => e.ProductName).HasMaxLength(50);

                entity.Property(e => e.Specifications).HasMaxLength(50);

                entity.Property(e => e.HashTag1)
                    .HasMaxLength(50)
                    .HasColumnName("HashTag");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.HashTag)
                    .HasForeignKey(d => new { d.ProductName, d.Specifications })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HashTag__34C8D9D1");
            });

            modelBuilder.Entity<Member>(entity =>
            {
                entity.Property(e => e.MemberId).HasColumnName("MemberID");

                entity.Property(e => e.BirthDay).HasColumnType("date");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.NickName).HasMaxLength(50);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

                entity.Property(e => e.Number).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Specifications)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Buyer)
                    .WithMany(p => p.Order)
                    .HasForeignKey(d => d.BuyerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Order__BuyerID__300424B4");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.Order)
                    .HasForeignKey(d => new { d.ProductName, d.Specifications })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Order__31EC6D26");
            });

            modelBuilder.Entity<Product>(entity =>
            {
                entity.HasKey(e => new { e.ProductName, e.Specifications })
                    .HasName("PK__Product__8A2F002268761358");

                entity.Property(e => e.ProductName).HasMaxLength(50);

                entity.Property(e => e.Specifications).HasMaxLength(50);

                entity.Property(e => e.Avalible).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImageName).HasMaxLength(150);
            });

            modelBuilder.Entity<Schedule>(entity =>
            {
                entity.HasKey(e => e.Date)
                    .HasName("PK__Schedule__77387D06851E54C6");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.ClassId).HasColumnName("ClassID");

                entity.Property(e => e.ClassName).HasMaxLength(50);

                entity.Property(e => e.RentId).HasColumnName("RentID");

                entity.HasOne(d => d.Rent)
                    .WithMany(p => p.Schedule)
                    .HasForeignKey(d => d.RentId)
                    .HasConstraintName("FK__Schedule__RentID__29572725");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}